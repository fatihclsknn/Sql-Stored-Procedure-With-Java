package com.example.sqlstoredprocedure.entity;

import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.NamedStoredProcedureQuery;
import jakarta.persistence.ParameterMode;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.StoredProcedureParameter;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@AllArgsConstructor
@Table(name = "Address")
@NamedStoredProcedureQuery(
	    name = "Address.getAll",
	    procedureName = "getAllAddress",
	    resultClasses = Address.class
	)

 @NamedStoredProcedureQuery(
        name = "GetAddressById",
        procedureName = "get_address",
        parameters = {
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_addressId", type = Integer.class)
        },
        resultClasses = Address.class
    )
@NamedStoredProcedureQuery(
	    name = "Address.delete",
	    procedureName = "delete_address",
	    parameters = {
	        @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_addressId", type = Long.class)
	    }
	)

@NamedStoredProcedureQuery(
        name = "UpdateAddress",
        procedureName = "update_address",
        parameters = {
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_addressId", type = Integer.class),
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_customerId", type = Integer.class),
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_countryName", type = String.class),
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_cityName", type = String.class)
        }
    )
@NamedStoredProcedureQuery(
        name = "CreateAddress",
        procedureName = "add_address",
        parameters = {
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_customerId", type = Integer.class),
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_countryName", type = String.class),
            @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_cityName", type = String.class)
        }
    )

public class Address {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "addressID")
    private Long addressID;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "customerId")
    private Customer customer;

    @Column(name = "countryName")
    private String countryName;

    @Column(name = "cityName")
    private String cityName;


    @Column(name = "createdDate", nullable = false, updatable = false)
    private LocalDateTime createdDate;

    @Column(name = "modifiedDate")
    private LocalDateTime modifiedDate;
    public Address() {
        this.createdDate = LocalDateTime.now();
    }
    @PreUpdate
    protected void onUpdate() {
        this.modifiedDate = LocalDateTime.now();
    }
}
